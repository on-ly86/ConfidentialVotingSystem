/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AnonymousReportPlatformFHE,
  AnonymousReportPlatformFHEInterface,
} from "../../contracts/AnonymousReportPlatformFHE";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ReportDecrypted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ReportSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "decryptCategoryCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "decryptReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decryptedReports",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encryptedReports",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "encryptedTitle",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedContent",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedCategory",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
    ],
    name: "getDecryptedReport",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "getEncryptedCategoryCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "reportCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "requestCategoryCountDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reportId",
        type: "uint256",
      },
    ],
    name: "requestReportDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint32",
        name: "encryptedTitle",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedContent",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedCategory",
        type: "bytes32",
      },
    ],
    name: "submitEncryptedReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610154575f6060610014610158565b828152826020820152826040820152015261002d610158565b60607350157cffd6bbfa2dece204a89ec419c23ef5755d9182815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf6980602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970391825416179055604051611b12908161018c8239f35b5f80fd5b60405190608082016001600160401b0381118382101761017757604052565b634e487b7160e01b5f52604160045260245ffdfe604060808152600480361015610013575f80fd5b5f3560e01c908163036738c21461122557816311214f5314610f31578163185c6f8414610f145781632b354a53146108f45781634d1701a8146108985781638b669007146108485781639d7ac99114610473578163a2e3135314610142578163c71a1a0d14610108578163c71a94fb146100b5575063da1f12ab14610096575f80fd5b346100b1575f3660031901126100b157602090516127118152f35b5f80fd5b9050346100b15760203660031901126100b15760a09181355f526001602052805f208054926001820154926002830154916003840154930154938151958652602086015284015260608301526080820152f35b82346100b1576020906101308261011e366114fc565b8184519382858094519384920161127c565b81016003815203019020549051908152f35b82346100b157610151366114fc565b908051825160209182818187019361016a81838761127c565b810160038152030190205493841561043357835167ffffffffffffffff8186018181118382101761042057865260018083528583019786368a376101ad84611578565b525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009384549960018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b156100b1578b51637d6e912360e11b8152808f018c9052905f90829081838161022e602482018b611a33565b03925af1801561041657610403575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b156103ff578a51633263b83b60e01b8152808e018d9052606060248201529086908290818381610296606482018a611a33565b638b66900760e01b604483015203925af180156103f5579086916103dd575b508b90527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808a528a8620546103cd578b8652895289852091519283116103ba57600160401b83116103ba578154838355808410610393575b50908452878420845b8381106103825750505050508154905f19821461036f5750600595969750600101905561036183865180936103548383019687925192839161127c565b8101038084520182611349565b519020935f52525f20555f80f35b634e487b7160e01b815260118952602490fd5b825182820155918901918401610317565b82865284848b882092830192015b8281106103af57505061030e565b5f81550185906103a1565b634e487b7160e01b855260418c52602485fd5b8a51633f06d22b60e01b81528d90fd5b6103e690611305565b6103f157848d6102b5565b8480fd5b8b513d88823e3d90fd5b8580fd5b61040e919650611305565b5f948d61023d565b8c513d5f823e3d90fd5b604189634e487b7160e01b5f525260245ffd5b835162461bcd60e51b815260208188018181526012918101919091527110d85d1959dbdc9e481b9bdd08199bdd5b9960721b604082015281906060010390fd5b82346100b15760603660031901126100b15760245f5491600180840180941161083657835f5581519260a084019067ffffffffffffffff91858110838211176108235784528585526020948786820181358152868301843581526060840190604435825260808501924284528b5f52888b52895f209551865551888601555160028501555160038401555191015583519160808301838110828211176108115780865261051f8161132d565b5f815283528451936105308561132d565b5f85528684019485528551926105458461132d565b5f845286850193845260608501955f8752895f5260028952875f20955180519085821161079f576105808261057a8a54611422565b8a6115b9565b8a90601f83116001146107b1576105ae92915f9183610734575b50508160011b915f199060031b1c19161790565b86555b5180518684019185821161079f576105d3826105cd8554611422565b856115b9565b8a90601f831160011461073f5761060092915f91836107345750508160011b915f199060031b1c19161790565b90555b600285019351998a51938411610723575050610623826105cd8554611422565b8690601f831160011461069e5750816003949392610678927fe705624d526f73216e03ddbd1769e05ec39ccc421f51fc00dd3bfa77d6f6e9709a9b5f926106935750508160011b915f199060031b1c19161790565b90555b019051151560ff8019835416911617905551428152a2005b015190508b8061059a565b9190601f19821699845f52885f209a5f5b81811061070e5750917fe705624d526f73216e03ddbd1769e05ec39ccc421f51fc00dd3bfa77d6f6e9709a9b918460039897969594106106f7575b505050811b01905561067b565b01515f1983881b60f8161c191690558a80806106ea565b838301518d559b85019b928a01928a016106af565b604190634e487b7160e01b5f52525ffd5b015190508e8061059a565b8592918c91601f198416865f52835f20935f905b8282106107885750508411610770575b505050811b019055610603565b01515f1960f88460031b161c191690558d8080610763565b8385015186558a979095019493840193018f610753565b8360418e634e487b7160e01b5f52525ffd5b8592918c91601f1984168b5f52835f20935f905b8282106107fa57505084116107e2575b505050811b0186556105b1565b01515f1960f88460031b161c191690558d80806107d5565b8385015186558a979095019493840193018f6107c5565b8260418a634e487b7160e01b5f52525ffd5b50634e487b7160e01b5f90815260418852fd5b82601186634e487b7160e01b5f52525ffd5b82346100b15761087961087361085d366113db565b928195835f9493945260056020525f2054611999565b5061179b565b6020818051810103126100b1576020015163ffffffff8116036100b157005b9050346100b15760203660031901126100b157355f526002602052805f20906108f06108c38361145a565b916108d06001850161145a565b9360ff60036108e16002840161145a565b920154169151948594856112c2565b0390f35b82346100b157610903366113db565b909291805f5260209160058352835f2054948515610edf57855f5260028452845f2092610944600393838587019361093f60ff86541615611538565b61179b565b815182019185818185019403126100b1578581015167ffffffffffffffff918282116100b1570183603f820112156100b1578681015193828511610e6e578460051b8951956109958a830188611349565b86528989870191840101928284116100b1578a8101915b848310610e815750505050506109c183611578565b51805190828211610e6e576109e0826109da8954611422565b896115b9565b8790601f8311600114610e0c57610a0d92915f9183610e015750508160011b915f199060031b1c19161790565b85555b610a1983611599565b519260019384870190805190848211610dee57610a3a826105cd8554611422565b8990601f8311600114610d82578260029593610a769593610a6f935f92610d775750508160011b915f199060031b1c19161790565b90556115a9565b519501948051918211610d6457610a9782610a918854611422565b886115b9565b8690601f8311600114610d0757610ac492915f91836106935750508160011b915f199060031b1c19161790565b84555b805460ff19168217905584518481610adf8187611608565b858152030190205415610c8d575b8495965f95518581610aff8188611608565b86815203019020549160018060a01b0390867f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970191604484845416918c519b8c938492639cd07acb60e01b8452898401528860248401525af1978815610c83575f98610c54575b50878415610c44575b15610c26575b915f60649288959454168a51998a95869463022f65e760e31b865285015260248401528160448401525af1938415610c1c575f94610beb575b50610bbd93945193848093611608565b90815203019020557f1df34de5c66b191aa71e6e0239d226bc6dded7915362e5c6eb05d3472de7e9605f80a2005b93508284813d8311610c15575b610c028183611349565b810103126100b157610bbd935193610bad565b503d610bf8565b85513d5f823e3d90fd5b96508592915f606492610c37611a66565b9992949550925050610b74565b9350610c4e611a66565b93610b6e565b9097508681813d8311610c7c575b610c6c8183611349565b810103126100b15751968a610b65565b503d610c62565b89513d5f823e3d90fd5b610c95611a66565b85518581610ca38188611608565b86815203019020558654600160401b811015610cf4578082610cc792018955611688565b610ce25796610cd9845f9798996116bd565b96959450610aed565b5f88634e487b7160e01b82525260245ffd5b604188634e487b7160e01b5f525260245ffd5b849291601f19831691885f52895f20925f5b8b828210610d4e5750508411610d37575b505050811b018455610ac7565b01515f1983881b60f8161c191690558a8080610d2a565b8385015186558997909501949384019301610d19565b60418a634e487b7160e01b5f525260245ffd5b015190505f8061059a565b879291601f19831691855f528c5f20928d5f905b828210610dd75750509160029795939185610a7698969410610dc0575b505050811b0190556115a9565b01515f19838d1b60f8161c191690558f8080610db3565b8385015186558c979095019493840193018e610d96565b60418d634e487b7160e01b5f525260245ffd5b015190508c8061059a565b90601f19831691885f52895f20925f5b8b828210610e58575050908460019594939210610e41575b505050811b018555610a10565b01515f1983891b60f8161c191690558b8080610e34565b6001859682939686015181550195019301610e1c565b60418b634e487b7160e01b5f525260245ffd5b82518681116100b157820184605f820112156100b1578c810151918d6060610eb4610eab8661136b565b92519283611349565b848252878186860101116100b1578e948594610ed492868501910161127c565b8152019201916109ac565b845162461bcd60e51b8152808801859052600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606490fd5b82346100b1575f3660031901126100b1576020905f549051908152f35b82346100b157602090816003193601126100b157823591825f526001808252825f209060028352610f6b60ff6003865f2001541615611538565b83519067ffffffffffffffff9060808301828111848210176104205786526003835260038584019460603687376001810154610fa686611578565b526002810154610fb586611599565b520154610fc1846115a9565b525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009384549560018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b156100b1578a51637d6e912360e11b8152808e018b9052905f908290818381611042602482018b611a33565b03925af1801561121b57611208575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b156103ff578951633263b83b60e01b8152808d018990526060602482015290869082908183816110aa606482018a611a33565b632b354a5360e01b604483015203925af180156111fe579086916111ea575b508790527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808952898620546111da57878652885288852091519283116111c757600160401b83116111c75781548383558084106111a0575b50908452868420845b83811061118f5750505050508154905f19821461117c5750918594939160016005940190555f52525f20557f692f7082be436727c1eb360ad57f2116cf8e2d16001837c08adafb7e0fa2f8f95f80a2005b634e487b7160e01b815260118852602490fd5b82518282015591880191840161112b565b82865284848a882092830192015b8281106111bc575050611122565b5f81550185906111ae565b634e487b7160e01b855260418b52602485fd5b8951633f06d22b60e01b81528c90fd5b6111f390611305565b6103f157848c6110c9565b8a513d88823e3d90fd5b611213919650611305565b5f948c611051565b8b513d5f823e3d90fd5b9050346100b15760203660031901126100b157355f526002602052805f20906108f060ff6003840154166112588461145a565b92611271600261126a6001880161145a565b960161145a565b9051948594856112c2565b5f5b83811061128d5750505f910152565b818101518382015260200161127e565b906020916112b68151809281855285808601910161127c565b601f01601f1916010190565b926112ef6060936112e16112fd9498979860808852608088019061129d565b90868203602088015261129d565b90848203604086015261129d565b931515910152565b67ffffffffffffffff811161131957604052565b634e487b7160e01b5f52604160045260245ffd5b6020810190811067ffffffffffffffff82111761131957604052565b90601f8019910116810190811067ffffffffffffffff82111761131957604052565b67ffffffffffffffff811161131957601f01601f191660200190565b9291926113938261136b565b916113a16040519384611349565b8294818452818301116100b1578281602093845f960137010152565b9080601f830112156100b1578160206113d893359101611387565b90565b60606003198201126100b1576004359167ffffffffffffffff6024358181116100b1578361140b916004016113bd565b926044359182116100b1576113d8916004016113bd565b90600182811c92168015611450575b602083101461143c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611431565b9060405191825f825461146c81611422565b908184526020946001916001811690815f146114da575060011461149c575b50505061149a92500383611349565b565b5f90815285812095935091905b8183106114c257505061149a93508201015f808061148b565b855488840185015294850194879450918301916114a9565b9250505061149a94925060ff191682840152151560051b8201015f808061148b565b60206003198201126100b1576004359067ffffffffffffffff82116100b157806023830112156100b1578160246113d893600401359101611387565b1561153f57565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48191958dc9e5c1d1959607a1b6044820152606490fd5b8051156115855760200190565b634e487b7160e01b5f52603260045260245ffd5b8051600110156115855760400190565b8051600210156115855760600190565b601f82116115c657505050565b5f5260205f20906020601f840160051c830193106115fe575b601f0160051c01905b8181106115f3575050565b5f81556001016115e8565b90915081906115df565b5f9291815461161681611422565b9260019180831690811561166d5750600114611633575b50505050565b9091929394505f5260209060205f20905f915b85831061165c575050505001905f80808061162d565b805485840152918301918101611646565b60ff191684525050508115159091020191505f80808061162d565b6004548110156115855760045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01905f90565b90808214611797576116cf8154611422565b9067ffffffffffffffff8211611319576116ed826105cd8554611422565b5f90601f83116001146117295761171a92915f918361171e5750508160011b915f199060031b1c19161790565b9055565b015490505f8061059a565b90601f198316915f5260209160205f2090855f5260205f20935f905b82821061177e575050908460019594939210611766575b505050811b019055565b01545f1960f88460031b161c191690555f808061175c565b8495819295850154815560018091019601940190611745565b5050565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0191602091838352604093845f20541561198857855f528352835f209084518083868295549384815201905f52865f20925f5b888282106119725750505061180a92500383611349565b80518085019081861161195e57860180911161195e576118ab5f8694611859896118be968151968161184589935180928d808701910161127c565b8201908a8201520388810187520185611349565b6118cd60018060a01b037f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497035416948a51988997889687956378542ead60e01b8752606060048801526064870190611a33565b600319938487830301602488015261129d565b9184830301604485015261129d565b03925af1918215611954575f9261191d575b50501561190d57507f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b5163cf6c44e960e01b8152600490fd5b90809250813d831161194d575b6119348183611349565b810103126100b1575180151581036100b1575f806118df565b503d61192a565b83513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b85548452600195860195889550930192016117f3565b845163d66ca67560e01b8152600490fd5b600454905f5b8281106119e05760405162461bcd60e51b815260206004820152601260248201527110d85d1959dbdc9e481b9bdd08199bdd5b9960721b6044820152606490fd5b816119ea82611688565b50604051611a0e81611a00602082018095611608565b03601f198101835282611349565b51902014611a1e5760010161199f565b6113d89250611a2d9150611688565b5061145a565b9081518082526020808093019301915f5b828110611a52575050505090565b835185529381019392810192600101611a44565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f600480830182905260248301529091602091839160449183916001600160a01b03165af1908115611afa575f91611acb575090565b90506020813d602011611af2575b81611ae660209383611349565b810103126100b1575190565b3d9150611ad9565b6040513d5f823e3d90fdfea164736f6c6343000818000a";

type AnonymousReportPlatformFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonymousReportPlatformFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonymousReportPlatformFHE__factory extends ContractFactory {
  constructor(...args: AnonymousReportPlatformFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AnonymousReportPlatformFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AnonymousReportPlatformFHE__factory {
    return super.connect(runner) as AnonymousReportPlatformFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonymousReportPlatformFHEInterface {
    return new Interface(_abi) as AnonymousReportPlatformFHEInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AnonymousReportPlatformFHE {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AnonymousReportPlatformFHE;
  }
}
